version: "2.4"

services:
  # Dependancies
  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: al_storage_key
      MINIO_ROOT_PASSWORD: Ch@ngeTh!sPa33w0rd
    ports:
      - "9000:9000"
    volumes:
      - ${PATH_REWRITE:-.}/config/ssl/minio.key:/root/.minio/certs/private.key:ro
      - ${PATH_REWRITE:-.}/config/ssl/minio.crt:/root/.minio/certs/public.crt:ro
    command: server /data
    depends_on:
      cert_server:
        condition: service_healthy

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.4
    environment:
      - xpack.security.http.ssl.enabled=true
      - xpack.security.http.ssl.client_authentication=required
      - xpack.security.http.ssl.key=/usr/share/elasticsearch/config/server.key
      - xpack.security.http.ssl.certificate=/usr/share/elasticsearch/config/server.crt
      - xpack.security.enabled=true
      - discovery.type=single-node
      - logger.level=WARN
      - "ELASTIC_PASSWORD=devpass"
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
    ports:
      - "9200:9200"
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "curl --silent --fail -u -k --cert=./config/server.key --key=./config/server.key elastic:$$ELASTIC_PASSWORD localhost:9200/_cluster/health || exit 1",
        ]
      interval: 30s
      timeout: 30s
      retries: 3
    volumes:
      - ${PATH_REWRITE:-.}/config/ssl/elasticsearch.key:/usr/share/elasticsearch/config/server.key:ro
      - ${PATH_REWRITE:-.}/config/ssl/elasticsearch.crt:/usr/share/elasticsearch/config/server.crt:ro
    depends_on:
      cert_server:
        condition: service_healthy
  redis:
    image: redis
    ports:
      - "6379:6379"
      - "6380:6379"
    healthcheck:
      test: ["CMD", "redis-cli", '--tls', '--cert', '/etc/tls/redis.crt', '--key', '/etc/tls/redis.key', '--cacert', '/etc/tls/root-ca.crt', "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    volumes:
      - ${PATH_REWRITE:-.}/config/ssl/redis.key:/etc/tls/redis.key:ro
      - ${PATH_REWRITE:-.}/config/ssl/redis.crt:/etc/tls/redis.crt:ro
      - ${PATH_REWRITE:-.}/config/ssl/al_root-ca.crt:/etc/tls/root-ca.crt:ro
    command: redis-server --tls-port 6379 --port 0 --tls-cert-file /etc/tls/redis.crt --tls-key-file /etc/tls/redis.key --tls-ca-cert-file /etc/tls/root-ca.crt
    depends_on:
      cert_server:
        condition: service_healthy
  nginx:
    image: cccs/nginx-ssl-frontend
    ports:
      - "80:80"
      - "443:443"
    environment:
      - FRONTEND_HOST=172.17.0.1
      - UI_HOST=172.17.0.1
      - SOCKET_HOST=172.17.0.1
      - FQDN=localhost
      - MAX_BODY_SIZE=100M
      - TEMPLATE=minimal

  # Certificate Server
  cert_server:
    image: cccs/assemblyline_dev:4.3.1
    ports:
      - "8000:8000"
    volumes:
      - ${ROOT_REWRITE:-../../..}/:/opt/alv4/
      - ${ROOT_REWRITE:-..}/core/config/config.yml:/etc/assemblyline/config.yml:ro
      - ${PATH_REWRITE:-.}/config/ssl/:/etc/assemblyline/ssl/
    working_dir: /opt/alv4/assemblyline-ui/assemblyline_ui/
    command: python3 certsrv.py
    healthcheck:
      test: ["CMD-SHELL", 'ls /etc/assemblyline/ssl | wc -l']
      interval: 30s
      timeout: 30s
      retries: 3
      start_period: 5s

networks:
  default:
    name: external
