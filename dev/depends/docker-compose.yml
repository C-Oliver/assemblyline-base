version: '3'

services:
  # Dependancies
  minio:
    image: minio/minio
    environment:
      MINIO_ACCESS_KEY: al_storage_key
      MINIO_SECRET_KEY: Ch@ngeTh!sPa33w0rd
    ports:
      - '9000:9000'
    command: server /data

  kibana:
    image: docker.elastic.co/kibana/kibana:7.4.0
    environment:
      SERVER_NAME: localhost
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      ELASTICSEARCH_USERNAME: kibana
      ELASTICSEARCH_PASSWORD: kibanapass
    command: /bin/bash -c "until curl --silent --fail -u $$ELASTICSEARCH_USERNAME:$$ELASTICSEARCH_PASSWORD $$ELASTICSEARCH_HOSTS; do sleep 1; done; /usr/local/bin/kibana-docker"
    restart: on-failure

  apm_server:
    image: sgaroncse/apm-server:7.4.0
    environment:
      ES_HOSTS: elasticsearch:9200
    ports:
      - '8200:8200'
    restart: on-failure

  elasticsearch:
    image: sgaroncse/elasticsearch:7.4.0
    environment:
      ES_JAVA_OPTS: "-Xms1024m -Xmx1024m"
      DISCOVERY_TYPE: "single-node"
      ELASTIC_PASSWORD: devpass
    ports:
      - '9200:9200'
    restart: on-failure

  elasticsearch-setup:
    image: sgaroncse/elasticsearch:7.4.0
    environment:
      ELASTIC_HOST: elasticsearch
      ELASTIC_PASSWORD: devpass
      KIBANA_PASSWORD: kibanapass
      APM_PASSWORD: apmpass
      BEATS_PASSWORD: beatspass
      LOGSTASH_PASSWORD: logstashpass
    command: /usr/share/elasticsearch/setup.sh

  filebeat:
    image: docker.elastic.co/beats/filebeat:7.4.0
    user: root
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/alv4/alv4/dev/depends/config/filebeat.docker.yml:/usr/share/filebeat/filebeat.yml:ro
    command: filebeat -e -strict.perms=false
    restart: on-failure

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:7.4.0
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /opt/alv4/alv4/dev/depends/config/metricbeat.docker.yml:/usr/share/metricbeat/metricbeat.yml:ro
    command: metricbeat -e --strict.perms=false
    restart: on-failure

  redis:
    image: redis
    ports:
      - '6379:6379'
      - '6380:6379'
    restart: on-failure

  nginx:
    image: sgaroncse/nginx-ssl-dev:1.15.10-2
    ports:
      - '80:80'
      - '443:443'
    environment:
      - UI_HOST=172.17.0.1
      - FQDN=localhost
      - MAX_BODY_SIZE=100M
    command: /bin/bash -c "envsubst < /tmp/default.template > /etc/nginx/conf.d/default.conf && cat /etc/nginx/conf.d/default.conf && exec nginx -g 'daemon off;'"
    restart: on-failure

networks:
  default:
    external:
      name: backend
